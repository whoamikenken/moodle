define("tiny_media/embed/embedthumbnailpreview",["exports","../selectors","core/str","../helpers","core/notification","./embedpreview","./embedhelpers","./embedhandler","../common"],(function(_exports,_selectors,_str,_helpers,_notification,_embedpreview,_embedhelpers,_embedhandler,_common){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.EmbedThumbnailPreview=void 0,_selectors=_interopRequireDefault(_selectors),_notification=_interopRequireDefault(_notification);_exports.EmbedThumbnailPreview=class{constructor(data){_defineProperty(this,"init",(mediaData=>{this.mediaData=mediaData,this.currentModal.uploadThumbnailModal.setTitle((0,_str.getString)("thumbnail",_common.component)),(0,_helpers.sourceTypeChecked)({source:this.media.poster,root:this.thumbnailModalRoot,fileNameSelector:_selectors.default.EMBED.elements.fileNameLabel}),this.setThumbnailSource(),this.registerMediaThumbnailEventListeners()})),_defineProperty(this,"setThumbnailSource",(()=>{const thumbnailPreview=this.thumbnailModalRoot.querySelector(_selectors.default.EMBED.elements.thumbnailPreview);thumbnailPreview.src=this.media.poster,thumbnailPreview.addEventListener("error",(async()=>{this.thumbnailModalRoot.querySelector(_selectors.default.EMBED.elements.urlWarning).innerHTML=await(0,_str.getString)("imageurlrequired",_common.component),(0,_helpers.showElements)(_selectors.default.EMBED.elements.urlWarning,this.thumbnailModalRoot),(0,_helpers.stopMediaLoading)(this.thumbnailModalRoot,_selectors.default.EMBED.type),new _embedhandler.EmbedHandler(this).resetUploadForm(!1)})),thumbnailPreview.addEventListener("load",(()=>{this.mediaData.media.poster=this.media.poster,this.media=this.mediaData.media,(0,_helpers.stopMediaLoading)(this.thumbnailModalRoot,_selectors.default.EMBED.type)}))})),_defineProperty(this,"deleteMedia",(()=>{_notification.default.deleteCancelPromise((0,_str.getString)("deletemediathumbnail",_common.component),(0,_str.getString)("deletemediathumbnailwarning",_common.component)).then((()=>{new _embedhandler.EmbedHandler(this).resetUploadForm(!1)})).catch((error=>{window.console.log(error)}))})),_defineProperty(this,"loadPreviewMediaThumbnail",(async()=>{new _embedhandler.EmbedHandler(this).loadMediaDetails(new _embedpreview.EmbedPreview(this),await(0,_embedhelpers.mediaDetailsTemplateContext)(this)).then((()=>{this.currentModal.uploadThumbnailModal.destroy();const currentModal=this.currentModal.insertMediaModal;this.currentModal=currentModal.insertMediaModal,delete this.mediaData})).catch((error=>{window.console.log(error)}))})),_defineProperty(this,"registerMediaThumbnailEventListeners",(()=>{const deleteMedia=this.thumbnailModalRoot.querySelector(_selectors.default.EMBED.actions.deleteThumbnail);deleteMedia&&deleteMedia.addEventListener("click",(e=>{e.preventDefault(),this.deleteMedia()}));const setPoster=this.thumbnailModalRoot.querySelector(_selectors.default.EMBED.actions.setPoster);setPoster&&setPoster.addEventListener("click",(()=>{this.loadPreviewMediaThumbnail()}))})),(0,_helpers.setPropertiesFromData)(this,data)}}}));

//# sourceMappingURL=embedthumbnailpreview.min.js.map