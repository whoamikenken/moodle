define("tiny_media/embed",["exports","./embedmodal","./options","editor_tiny/options","./embed/embedhandler","./embed/embedhelpers","./embed/embedinsert","./helpers","./selectors"],(function(_exports,_embedmodal,_options,_options2,_embedhandler,_embedhelpers,_embedinsert,_helpers,_selectors){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,_embedmodal=_interopRequireDefault(_embedmodal),_selectors=_interopRequireDefault(_selectors);return _exports.default=class{constructor(editor){_defineProperty(this,"editor",null),_defineProperty(this,"canShowFilePicker",!1),_defineProperty(this,"canShowFilePickerTrack",!1),_defineProperty(this,"canShowDropZone",!1),_defineProperty(this,"displayDialogue",(async()=>{const[mediaType,selectedMedia]=(0,_embedhelpers.getSelectedMediaElement)(this.editor);this.mediaType=mediaType,this.selectedMedia=selectedMedia,this.selectedMedia?(this.isUpdating=!0,this.loadSelectedMedia()):(await this.createMediaModal(),await this.loadInsertMediaModal())})),_defineProperty(this,"loadInsertMediaModal",(async()=>{const embedHandler=new _embedhandler.EmbedHandler(this);embedHandler.loadTemplatePromise((0,_embedhelpers.insertMediaTemplateContext)(this)),await embedHandler.registerEventListeners()})),_defineProperty(this,"createMediaModal",(async()=>{this.currentModal=await _embedmodal.default.create({large:!0,templateContext:{elementid:this.editor.getElement().id}}),this.modalRoot=this.currentModal.getRoot(),this.root=this.modalRoot[0]})),_defineProperty(this,"loadSelectedMedia",(async()=>{let mediaSource=null;if(["video","audio"].includes(this.mediaType)){mediaSource=this.selectedMedia.querySelector("source").src;const sources=this.selectedMedia.querySelectorAll("source");if(sources.length>1){let alternativeSources=[];Object.keys(sources).forEach((function(source){alternativeSources.push(sources[source].src)})),this.alternativeSources=alternativeSources}}else this.selectedMedia.classList.contains(_selectors.default.EMBED.externalMediaProvider)&&(mediaSource=this.selectedMedia.href,this.mediaType="link");if(this.mediaType){await this.createMediaModal(),(0,_helpers.startMediaLoading)(this.root,_selectors.default.EMBED.type);const embedInsert=new _embedinsert.EmbedInsert(this);embedInsert.init(),embedInsert.loadMediaPreview(mediaSource),await new _embedhandler.EmbedHandler(this).registerEventListeners()}else await this.createMediaModal(),this.loadInsertMediaModal()}));const permissions=(0,_options.getEmbedPermissions)(editor),options=(0,_options2.getFilePicker)(editor,"media");this.canShowFilePicker=permissions.filepicker&&void 0!==options&&Object.keys(options.repositories).length>0,this.canShowFilePickerTrack=permissions.filepicker&&void 0!==(0,_options2.getFilePicker)(editor,"subtitle"),this.canShowDropZone=Object.values(options.repositories).some((repository=>"upload"===repository.type)),this.editor=editor,this.acceptedMediaTypes=options.accepted_types,this.contextId=(0,_options2.getContextId)(editor);const imageOptions=(0,_options2.getFilePicker)(editor,"image");this.acceptedImageTypes=imageOptions.accepted_types,this.canShowImageFilePicker=permissions.filepicker&&void 0!==imageOptions&&Object.keys(imageOptions.repositories).length>0}},_exports.default}));

//# sourceMappingURL=embed.min.js.map