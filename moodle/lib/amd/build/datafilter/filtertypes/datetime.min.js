define("core/datafilter/filtertypes/datetime",["exports","core/datafilter/filtertype","core/datafilter/selectors","core/templates","core/notification","core/str"],(function(_exports,_filtertype,_selectors,_templates,_notification,_str){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,_filtertype=_interopRequireDefault(_filtertype),_selectors=_interopRequireDefault(_selectors),_templates=_interopRequireDefault(_templates),_notification=_interopRequireDefault(_notification);const MODES_before="before",MODES_after="after",MODES_between="between";class _default extends _filtertype.default{constructor(filterType,rootNode,initialValues){let filterOptions=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{mode:MODES_before};super(filterType,rootNode,initialValues),_defineProperty(this,"SELECTORS",{afterwrapper:".".concat(this.filterType,"-afterwrapper"),beforewrapper:".".concat(this.filterType,"-beforewrapper"),betweenwrapper:".".concat(this.filterType,"-betweenwrapper"),mode:"[data-filterfield=".concat(this.filterType,"-mode]")}),_defineProperty(this,"mode",null),this.addModeSelector(filterOptions.mode)}async getContext(initialValues){var _initialValues$,_initialValues$2;const sourceDataNode=this.getSourceDataForFilter(),defaultBefore=sourceDataNode.getElementsByTagName("option")[0].value,defaultAfter=sourceDataNode.getElementsByTagName("option")[1].value,title=sourceDataNode.getAttribute("data-field-title"),labels=await(0,_str.get_strings)([{key:"datetimefilterafter",component:"core",param:{title:title}},{key:"datetimefilterbefore",component:"core",param:{title:title}}]);return{filtertype:this.filterType,afterlabel:labels[0],beforelabel:labels[1],required:sourceDataNode.dataset.required,aftervalue:null!==(_initialValues$=initialValues[0])&&void 0!==_initialValues$?_initialValues$:defaultAfter,beforevalue:null!==(_initialValues$2=initialValues[1])&&void 0!==_initialValues$2?_initialValues$2:defaultBefore}}async addValueSelector(){let initialValues=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];const specificFilterSet=this.rootNode.querySelector(_selectors.default.filter.byName(this.filterType)),context=await this.getContext(initialValues),datetimeUi=await _templates.default.renderForPromise("core/datafilter/filtertypes/datetime_selector",context);return _templates.default.replaceNodeContents(specificFilterSet.querySelector(_selectors.default.filter.regions.values),datetimeUi.html,datetimeUi.js)}async addModeSelector(mode){const modeStrings=await(0,_str.get_strings)([{key:"selectdates"},{key:"filterdatebefore",component:"reportbuilder"},{key:"filterdateafter",component:"reportbuilder"},{key:"between"}]),context={label:modeStrings[0],filtertype:this.filterType,modeoptions:[{value:MODES_before,label:modeStrings[1],selected:mode===MODES_before?"selected":""},{value:MODES_after,label:modeStrings[2],selected:mode===MODES_after?"selected":""},{value:MODES_between,label:modeStrings[3],selected:mode===MODES_between?"selected":""}]},modeUi=await _templates.default.renderForPromise("core/datafilter/filtertypes/datetime_mode",context);this.getFilterValueNode().insertAdjacentHTML("beforebegin",modeUi.html);const modeSelect=this.filterRoot.querySelector(this.SELECTORS.mode);modeSelect.addEventListener("change",this.updateFieldVisibility.bind(this)),modeSelect.dispatchEvent(new Event("change"))}updateFieldVisibility(event){const filterValueNode=this.getFilterValueNode(),afterWrapper=filterValueNode.querySelector(this.SELECTORS.afterwrapper),beforeWrapper=filterValueNode.querySelector(this.SELECTORS.beforewrapper),betweenWrapper=filterValueNode.querySelector(this.SELECTORS.betweenwrapper),value=event.target.value;value===MODES_between?betweenWrapper.classList.remove("d-none"):betweenWrapper.classList.add("d-none"),value===MODES_after||value===MODES_between?afterWrapper.classList.remove("d-none"):afterWrapper.classList.add("d-none"),value===MODES_before||value===MODES_between?beforeWrapper.classList.remove("d-none"):beforeWrapper.classList.add("d-none")}get values(){return[this.filterRoot.querySelector('[data-filterfield="'.concat(this.name,'1"]')).value,this.filterRoot.querySelector('[data-filterfield="'.concat(this.name,'2"]')).value]}get filterOptions(){return[{name:"mode",value:this.filterRoot.querySelector(this.SELECTORS.mode).value}]}get filterValue(){return{name:this.name,jointype:this.jointype,values:this.values,filteroptions:this.filterOptions}}validate(){const mode=document.querySelector(this.SELECTORS.mode).value,before=document.querySelector(this.SELECTORS.beforewrapper+" input"),after=document.querySelector(this.SELECTORS.afterwrapper+" input");return after.setCustomValidity(""),!(mode===MODES_between&&after.value>=before.value)||((0,_str.get_strings)([{key:"invaliddatetimebetween",component:"error",param:{before:before.value,after:after.value}}]).then((strings=>(after.setCustomValidity(strings[0]),after.reportValidity(),strings))).catch(_notification.default.exception),!1)}}return _exports.default=_default,_exports.default}));

//# sourceMappingURL=datetime.min.js.map