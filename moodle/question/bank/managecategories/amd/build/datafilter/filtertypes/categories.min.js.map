{"version":3,"file":"categories.min.js","sources":["../../../src/datafilter/filtertypes/categories.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Filter managing display of subcategories questions.\n *\n * @module     qbank_managecategories/datafilter/filtertypes/categories\n * @author     Mark Johnson <mark.johnson@catalyst-eu.net>\n * @copyright  2023 Catalyst IT Europe Ltd.\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport GenericFilter from 'core/datafilter/filtertype';\nimport Templates from 'core/templates';\nimport {getUserPreference, setUserPreference} from 'core_user/repository';\nimport Notification from 'core/notification';\nimport {get_strings as getStrings} from 'core/str';\n\nexport default class extends GenericFilter {\n\n    SELECTORS = {\n        includeSubcategories: 'input[name=category-subcategories]',\n        selectInput: 'select#filter-value-category',\n        selectInputOption: 'select#filter-value-category option',\n        validationInput: 'div[data-filter-type=\"category\"] div.form-autocomplete-input input',\n    };\n\n    /**\n     * Construct a new categoires filter\n     *\n     * @param {String} filterType The type of filter that this relates to (categories)\n     * @param {HTMLElement} rootNode The root node for the participants filterset\n     * @param {Array} initialValues The currently selected category IDs.\n     * @param {Object} filterOptions An object containing the additional options for the filter, currently \"includesubcategories\"\n     *     is supported, which if true will display the \"Also show questions from subcategories\" checkbox as checked.\n     */\n    constructor(filterType, rootNode, initialValues, filterOptions = {includesubcategories: false}) {\n        super(filterType, rootNode, initialValues);\n        this.addSubcategoryCheckbox(filterOptions.includesubcategories);\n    }\n\n    async addSubcategoryCheckbox(checked = null) {\n        const filterValueNode = this.getFilterValueNode();\n        if (checked === null || checked === undefined) {\n            checked = await getUserPreference('qbank_managecategories_includesubcategories_filter_default');\n        } else {\n            setUserPreference('qbank_managecategories_includesubcategories_filter_default', checked);\n        }\n        const {html} = await Templates.renderForPromise('qbank_managecategories/include_subcategories_checkbox', {\n            checked: checked && checked !== '0',\n        });\n        filterValueNode.insertAdjacentHTML('afterend', html);\n    }\n\n    get filterOptions() {\n        return [\n            {name: 'includesubcategories', value: this.filterRoot.querySelector(this.SELECTORS.includeSubcategories).checked}\n        ];\n    }\n\n    get filterValue() {\n        return {\n            name: this.name,\n            jointype: this.jointype,\n            values: this.values,\n            filteroptions: this.filterOptions,\n        };\n    }\n\n    validate() {\n\n        // Get the possible option values and filter out empty ones.\n        const nodelist = this.filterRoot.querySelectorAll(this.SELECTORS.selectInputOption);\n\n        // This gets all the values from the autocomplete's hidden select menu and filters out\n        // any which are not positive integers.\n        const validoptions = Array.from(nodelist).map(\n            option => (parseInt(option.value) > 0) ? parseInt(option.value) : false\n        ).filter(Boolean);\n\n        // Get the value supplied.\n        const value = parseInt(this.filterRoot.querySelector(this.SELECTORS.selectInput).value);\n\n        // Reset validation.\n        const node = this.filterRoot.querySelector(this.SELECTORS.validationInput);\n        node.setCustomValidity('');\n\n        // Make sure the value supplied is valid.\n        if (!validoptions.includes(value)) {\n            getStrings([\n                {\n                    key: 'error:category',\n                    component: 'qbank_managecategories',\n                },\n            ]).then((strings) => {\n                node.setCustomValidity(strings[0]);\n                node.reportValidity();\n                return strings;\n            }).catch(Notification.exception);\n\n            return false;\n        }\n\n        return true;\n\n    }\n\n}\n"],"names":["GenericFilter","constructor","filterType","rootNode","initialValues","filterOptions","includesubcategories","includeSubcategories","selectInput","selectInputOption","validationInput","addSubcategoryCheckbox","checked","filterValueNode","this","getFilterValueNode","html","Templates","renderForPromise","insertAdjacentHTML","name","value","filterRoot","querySelector","SELECTORS","filterValue","jointype","values","filteroptions","validate","nodelist","querySelectorAll","validoptions","Array","from","map","option","parseInt","filter","Boolean","node","setCustomValidity","includes","key","component","then","strings","reportValidity","catch","Notification","exception"],"mappings":"ukBA8B6BA,oBAkBzBC,YAAYC,WAAYC,SAAUC,mBAAeC,qEAAgB,CAACC,sBAAsB,2BAC9EJ,WAAYC,SAAUC,qBAjBpB,CACRG,qBAAsB,qCACtBC,YAAa,+BACbC,kBAAmB,sCACnBC,gBAAiB,+MAcZC,uBAAuBN,cAAcC,yDAGjBM,+DAAU,WAC7BC,gBAAkBC,KAAKC,qBACzBH,MAAAA,QACAA,cAAgB,iCAAkB,gGAEhB,6DAA8DA,eAE9EI,KAACA,YAAcC,mBAAUC,iBAAiB,wDAAyD,CACrGN,QAASA,SAAuB,MAAZA,UAExBC,gBAAgBM,mBAAmB,WAAYH,MAG/CX,0BACO,CACH,CAACe,KAAM,uBAAwBC,MAAOP,KAAKQ,WAAWC,cAAcT,KAAKU,UAAUjB,sBAAsBK,UAI7Ga,wBACO,CACHL,KAAMN,KAAKM,KACXM,SAAUZ,KAAKY,SACfC,OAAQb,KAAKa,OACbC,cAAed,KAAKT,eAI5BwB,iBAGUC,SAAWhB,KAAKQ,WAAWS,iBAAiBjB,KAAKU,UAAUf,mBAI3DuB,aAAeC,MAAMC,KAAKJ,UAAUK,KACtCC,QAAWC,SAASD,OAAOf,OAAS,GAAKgB,SAASD,OAAOf,SAC3DiB,OAAOC,SAGHlB,MAAQgB,SAASvB,KAAKQ,WAAWC,cAAcT,KAAKU,UAAUhB,aAAaa,OAG3EmB,KAAO1B,KAAKQ,WAAWC,cAAcT,KAAKU,UAAUd,wBAC1D8B,KAAKC,kBAAkB,MAGlBT,aAAaU,SAASrB,8BACZ,CACP,CACIsB,IAAK,iBACLC,UAAW,4BAEhBC,MAAMC,UACLN,KAAKC,kBAAkBK,QAAQ,IAC/BN,KAAKO,iBACED,WACRE,MAAMC,sBAAaC,YAEf"}